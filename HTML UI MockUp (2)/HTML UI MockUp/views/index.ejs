<%- include('header.ejs') %>
<!DOCTYPE html>
<html>
  <head>
    <title>Title</title>
    <link href="/stylesheets/style.css" rel="stylesheet" type="text/css">
    <script data-require="d3@3.5.17" data-semver="3.5.17" src="https://cdnjs.cloudflare.com/ajax/libs/d3/3.5.17/d3.js"></script>
    <link rel="stylesheet" href="https://rawgit.com/sujeetsr/d3.slider/master/d3.slider.css" />
    <script src="https://rawgit.com/sujeetsr/d3.slider/master/d3.slider.js"></script>
  </head>
  <script>
    var base_scores = []
    var color_scores = []
    function open_cma_form() {
      document.getElementById("cma_form").style.display = "block";
      document.getElementById("outer-grid").style.display = "none";
    }

    function close_cma_form() {
      document.getElementById("cma_form").style.display = "none";
      document.getElementById("outer-grid").style.display = "grid";
    }

    function open_qma_form() {
      document.getElementById("qma_form").style.display = "block";
      document.getElementById("outer-grid").style.display = "none";
    }

    function close_qma_form() {
      document.getElementById("qma_form").style.display = "none";
      document.getElementById("outer-grid").style.display = "grid";
    }
    //this function updates the slider position when user changes the value in the box
    function updateTextInput(parent) {
      var val = -1;
      //console.log(parent.childNodes)
      for (const node of parent.childNodes) {
        if(node.id === "rangeInput"){
          val = node.value;
          let sv = node.value;
          //console.log(node.classList)
          change_secret(sv, node.classList);
          let slider_class_list = node.classList.value;
          let qma_color_list = document.getElementsByClassName("color-QMA");
          let color_bar_value_list = document.getElementsByClassName("color_bar_value");
          for(let i = 0; i < qma_color_list.length; i++){
            if(qma_color_list[i].classList.contains(slider_class_list)){
              let base = base_scores[i]
              let value = 0;
              if(sv < 50){
                value = base - (sv - 50)
              }else if (sv > 50){
                value = base + ((-1 * sv) + 50)
              }else{
                value = base
              }
              if(value < 0){
                value = 0;
              }else if (value > 100){
                value = 100
              }
              qma_color_list[i].setAttribute('value', value);
              change_test(value, node.classList);
              //color_bar_value_list[i].setAttribute('value', value);
              myFunction()
              break;
            }
          }
        }else if(node.id === "textInput"){
          node.value = val;
        }
      }
    }
    //this function updates the number value in the box when user changes the slider
    function updateSlider(parent) {

      var val = -1;
      for (const node of parent.childNodes) {
        if(node.id === "textInput"){
          val = node.value;
          if (val > 100){
            node.value = 100;
          }
        }
      }
      for (const node of parent.childNodes) {
        if(node.id === "rangeInput"){
          node.value = val;
          let sv = node.value;
          console.log(sv)
          change_secret(sv, node.classList);
          let slider_class_list = node.classList.value;
          let qma_color_list = document.getElementsByClassName("color-QMA");
          let color_bar_value_list = document.getElementsByClassName("color_bar_value");
          for(let i = 0; i < qma_color_list.length; i++){
            if(qma_color_list[i].classList.contains(slider_class_list)){
              let base = base_scores[i]
              let value = 0;
              if(sv < 50){
                value = base - (sv - 50)
              }else if (sv > 50){
                value = base + ((-1 * sv) + 50)
              }else{
                value = base
              }
              if(value < 0){
                value = 0;
              }else if (value > 100){
                value = 100
              }
              qma_color_list[i].setAttribute('value', value);
              change_test(value, node.classList);
              //color_bar_value_list[i].setAttribute('value', value);
              myFunction()
              break;
            }
          }
        }
      }
    }

    function change_test(value, class_list){
      //console.log(value);
      let color_bar_value_list = document.getElementsByClassName("color_bar_value");
      for (let i = 0; i < color_bar_value_list.length; i++) {
        if(color_bar_value_list[i].classList.contains(class_list[0])){
          color_bar_value_list[i].setAttribute("value", value)
          //console.log(secret2_list[i].value)
        }
      }
    }

    //onload function that is SUPPOSED to take the hidden form values in header (labeled secret) and change them when new values are passed in. Also changes slider color (see comment below)
    function myFunction(){
      var test = '<%- JSON.stringify(selected_student.submission.file_list[0].QMA_scores) %>';
      test = JSON.parse(test)
      for (let i = 0; i < test.length; i++){
        base_scores.push(test[i])
      }
      test = '<%- JSON.stringify(selected_student.submission.file_list[0].CMA_scores) %>';
      test = JSON.parse(test)
      for (let i = 0; i < test.length; i++){
        base_scores.push(test[i])
      }
      //this will basically set the color of the slider and change it when the slider is changed. No, I don't know how it works
      const Slider2= document.querySelectorAll('input[name=rangeInput2]')
      test = '<%- JSON.stringify(threshold_list) %>';
      test = JSON.parse(test)

      for (let i = 0; i < Slider2.length; i++) {
        //console.log(Slider2[i].value)
        Slider2[i].style.setProperty('--SliderColor', `hsl(${Slider2[i].value}, 100%, 50%)`)
        Slider2[i].oninput =_=> Slider2[i].style.setProperty('--SliderColor', `hsl(${Slider2[i].value}, 100%, 50%)`)
      }

      const score_list= document.querySelectorAll('td[class=score]')
      for (let i = 0; i < score_list.length; i++) {
        //console.log(score_list[i].innerHTML)
        score_list[i].style.setProperty('background-color', `hsl(${score_list[i].innerHTML}, 100%, 50%)`)
      }

    }
  </script>
  <!--"https://codepen.io/brandonmcconnell/pen/oJBVQW" -->
  <body onload="myFunction()">
    <div class="cma-popup" id="cma_form">
      <div id="outer-grid-summary">
        <div id="inner-grid-summary">
          <div class="summary-table">
            <table>
              <tr>
                <th colspan="4">CMA Metric Analysis Report</th>
              </tr>
              <tr>
                <th>Student ID</th>
                <th>Variable Names</th>
                <th>Class Names</th>
                <th>Comment Percentage</th>
              </tr>
              <tr>
                <td>000123</td>
                <td class="score">10</td>
                <td class="score">55</td>
                <td class="score">30</td>
              </tr>

              <tr>
                <td>000456</td>
                <td class="score">10</td>
                <td class="score">20</td>
                <td class="score">35</td>
              </tr>

              <tr>
                <td>000789</td>
                <td class="score">100</td>
                <td class="score">30</td>
                <td class="score">70</td>
              </tr>

              <tr>
                <td>101112</td>
                <td class="score">65</td>
                <td class="score">20</td>
                <td class="score">15</td>
              </tr>

            </table>
          </div>
        </div>
        <div id="inner-grid-summary">
          <div>
            <table>
              <tr>
                <th colspan="2">CMA Summary Observations</th>
              </tr>
            </table>
          </div>
        </div>
      </div>
      <button type="button" class="btn cancel ui-button" onclick="close_cma_form()">Close Summary</button>
    </div>
    <div class="qma-popup" id="qma_form">
      <div id="outer-grid-summary">
        <div id="inner-grid-summary">
          <div class="summary-table">
            <table>
              <tr>
                <th colspan="4">QMA Metric Analysis Report</th>
              </tr>
              <tr>
                <th>Student ID</th>
                <th>Cyclo Complexity</th>
                <th>Coupling</th>
                <th>Cohesion</th>
                <th>LOC</th>
              </tr>
              <tr>
                <td>000123</td>
                <td class="score">10</td>
                <td class="score">55</td>
                <td class="score">30</td>
                <td class="score">45</td>
              </tr>

              <tr>
                <td>000456</td>
                <td class="score">10</td>
                <td class="score">20</td>
                <td class="score">35</td>
                <td class="score">40</td>
              </tr>

              <tr>
                <td>000789</td>
                <td class="score">100</td>
                <td class="score">30</td>
                <td class="score">70</td>
                <td class="score">40</td>
              </tr>

              <tr>
                <td>101112</td>
                <td class="score">65</td>
                <td class="score">20</td>
                <td class="score">15</td>
                <td class="score">75</td>
              </tr>

            </table>
          </div>
        </div>
        <div id="inner-grid-summary">
          <div>
            <table>
              <tr>
                <th colspan="2">QMA Summary Observations</th>
              </tr>
            </table>
          </div>
        </div>
      </div>
      <button type="button" class="btn cancel ui-button" onclick="close_qma_form()">Close Summary</button>
    </div>
    <div id="outer-grid">
      <div id="inner-grid">
        <div>
          <p><pre><%=focus_file.code%></pre></p>
        </div>
      </div>
      <div id="inner-grid">
        <div>
          <table style="height: 100%;">
            <tr>
              <th colspan="2">Quality Metric Analysis (QMA)</th>
            </tr>
            <tr>
              <td>
                <b>Complexity</b>
              </td>
            </tr>
            <% for (let i = 0; i < focus_file.complexity_scores.length; i++) { %>
              <tr>
                <td>
                  <p><%= complexity_names[i] %></p>
                </td>
                <td>
                  <input id="itr" type="range" min="0" max="100" value=<%= focus_file.complexity_scores[i]%> name="rangeInput2" class="slider2 test color-QMA <%='s'+(i+1)%>">
                </td>
              </tr>
            <% } %>

            <tr>
              <td>
                <b>Coupling</b>
              </td>
            </tr>
            <% for (let i = 0; i < focus_file.coupling_scores.length; i++) { %>
              <tr>
                <td>
                  <p><%= coupling_names[i] %></p>
                </td>
                <td>
                  <input id="itr" type="range" min="0" max="100" value=<%= focus_file.coupling_scores[i]%> name="rangeInput2" class="slider2 test color-QMA <%='s'+(i+1+focus_file.complexity_scores.length)%>">
                </td>
              </tr>
            <% } %>
            <tr>
              <td>
                <b>Cohesion</b>
              </td>
            </tr>
            <% for (let i = 0; i < focus_file.cohesion_scores.length; i++) { %>
              <tr>
                <td>
                    <p><%= cohesion_names[i] %></p>
                </td>
                <td>
                  <input id="itr" type="range" min="0" max="100" value=<%= focus_file.cohesion_scores[i]%> name="rangeInput2" class="slider2 test color-QMA <%='s'+(i+1+focus_file.complexity_scores.length+focus_file.coupling_scores.length)%>">
                </td>
              </tr>
            <% } %>
          </table>
        </div>
        <div>
          <table style="height: 100%;">
            <tr>
              <th colspan="2">Convention Metric Analysis (CMA)</th>
            </tr>
            <tr>
              <td>
                <b>General</b>
              </td>
            </tr>
            <% for (let i = 0; i < general_names.length; i++) { %>
              <tr>
                <td>
                  <p><%= general_names[i] %></p>
                </td>
                <td></td>
                <td>
                  <input id="itr" type="range" min="0" max="100" value=<%= focus_file.general_scores[i]%> name="rangeInput2" class="slider2 test color-QMA <%='s'+(i+1+focus_file.complexity_scores.length+focus_file.coupling_scores.length+focus_file.cohesion_scores.length)%>">
                </td>
              </tr>
            <% } %>

            <tr>
              <td>
                <b>Naming</b>
              </td>
            </tr>

            <% for (let i = 0; i < focus_file.naming_scores.length; i++) { %>
              <tr>
                <td>
                  <p><%= naming_names[i] %></p>
                </td>
                <td></td>
                <td>
                  <input id="itr" type="range" min="0" max="100" value=<%= focus_file.naming_scores[i]%> name="rangeInput2" class="slider2 test color-QMA <%='s'+(i+1+focus_file.complexity_scores.length+focus_file.coupling_scores.length+focus_file.cohesion_scores.length+focus_file.general_scores.length)%>">
                </td>
              </tr>
            <% } %>
          </table>
        </div>
      </div>
      <div id="inner-grid">
        <div>
          <table>
            <tr>
              <th colspan="2">QMA Threshold</th>
            </tr>
            <tr>
              <td>
                <b>Complexity</b>
              </td>
            </tr>
            <% for (let i = 0; i < focus_file.complexity_scores.length; i++) { %>
              <tr>
                <td>
                    <p><%= complexity_names[i] %></p>
                </td>
                <td>
                  <div class="slider qma-threshold-update">
                    <input type="range" id="rangeInput" name="rangeInput" class=<%='s'+(i+1)%> min="0" max="100" value=<%=threshold_list[i]%> onchange="updateTextInput(this.parentNode);">
                    <input type="text" value=<%=threshold_list[i]%> id="textInput" class="slider-value <%='s'+(i+1)%>" onchange="updateSlider(this.parentNode);">
                  </div>
                </td>
              </tr>
            <% } %>
            <tr>
              <td>
                <b>Coupling</b>
              </td>
            </tr>
            <% for (let i = 0; i < focus_file.coupling_scores.length; i++) { %>
              <tr>
                <td>
                  <p><%= coupling_names[i] %></p>
                </td>
                <td>
                  <div class="slider qma-threshold-update">
                    <input type="range" id="rangeInput" name="rangeInput" class=<%='s'+(i+1+focus_file.complexity_scores.length)%> min="0" max="100" value=<%=threshold_list[i]%> onchange="updateTextInput(this.parentNode);">
                    <input type="text" value=<%=threshold_list[i+focus_file.complexity_scores.length]%> id="textInput" class="slider-value <%='s'+(i+1+focus_file.complexity_scores.length)%>" onchange="updateSlider(this.parentNode);">
                  </div>
                </td>
              </tr>
            <% } %>
            <tr>
              <td>
                <b>Cohesion</b>
              </td>
            </tr>
            <% for (let i = 0; i < focus_file.cohesion_scores.length; i++) { %>
              <tr>
                <td>
                  <p><%= cohesion_names[i] %></p>
                </td>
                <td>
                  <div class="slider qma-threshold-update">
                    <input type="range" id="rangeInput" name="rangeInput" class=<%='s'+(i+1+focus_file.complexity_scores.length+focus_file.coupling_scores.length)%> min="0" max="100" value=<%=threshold_list[i+focus_file.complexity_scores.length+focus_file.coupling_scores.length]%> onchange="updateTextInput(this.parentNode);">
                    <input type="text" value=<%=threshold_list[i+focus_file.complexity_scores.length+focus_file.coupling_scores.length]%> id="textInput" class="slider-value <%='s'+(i+1+focus_file.complexity_scores.length+focus_file.coupling_scores.length)%>" onchange="updateSlider(this.parentNode);">
                  </div>
                </td>
                </td>
              </tr>
            <% } %>
          </table>
        </div>
        <div>
          <table>
            <tr>
              <th colspan="2">CMA Threshold</th>
            </tr>
            <tr>
              <td>
                <b>General</b>
              </td>
            </tr>
            <% for (let i = 0; i < focus_file.general_scores.length; i++) { %>
              <tr>
                <td>
                  <p><%= general_names[i] %></p>
                </td>
                <td>
                  <div class="slider qma-threshold-update">
                    <input type="range" id="rangeInput" name="rangeInput" class=<%='s'+(i+1+focus_file.complexity_scores.length+focus_file.coupling_scores.length+focus_file.cohesion_scores.length)%> min="0" max="100" value=<%=threshold_list[i+focus_file.complexity_scores.length+focus_file.coupling_scores.length+focus_file.cohesion_scores.length]%> onchange="updateTextInput(this.parentNode);">
                    <input type="text" value=<%=threshold_list[i+focus_file.complexity_scores.length+focus_file.coupling_scores.length+focus_file.cohesion_scores.length]%> id="textInput" class="slider-value <%='s'+(i+1+focus_file.complexity_scores.length+focus_file.coupling_scores.length+focus_file.cohesion_scores.length)%>" onchange="updateSlider(this.parentNode);">
                  </div>
                </td>
              </tr>
            <% } %>
            <tr>
              <td>
                <b>Naming</b>
              </td>
            </tr>
            <% for (let i = 0; i < focus_file.naming_scores.length; i++) { %>
              <tr>
                <td>
                  <p><%= naming_names[i] %></p>
                </td>
                <td>
                  <div class="slider qma-threshold-update">
                    <input type="range" id="rangeInput" name="rangeInput" class=<%='s'+(i+1+focus_file.complexity_scores.length+focus_file.coupling_scores.length+focus_file.cohesion_scores.length+focus_file.general_scores.length)%> min="0" max="100" value=<%=threshold_list[i+focus_file.complexity_scores.length+focus_file.coupling_scores.length+focus_file.cohesion_scores.length+focus_file.general_scores.length]%> onchange="updateTextInput(this.parentNode);">
                    <input type="text" value=<%=threshold_list[i+focus_file.complexity_scores.length+focus_file.coupling_scores.length+focus_file.cohesion_scores.length+focus_file.general_scores.length]%> id="textInput" class="slider-value <%='s'+(i+1+focus_file.complexity_scores.length+focus_file.coupling_scores.length+focus_file.cohesion_scores.length+focus_file.general_scores.length)%>" onchange="updateSlider(this.parentNode);">
                  </div>
                </td>
              </tr>
            <% } %>
          </table>
        </div>
      </div>
      <div id="inner-grid">
        <div>
          <div id="submission-details">
            <div id="submission-history">
              <label><b>Submitted:</b></label>
              <%= selected_student.submission.submission_time %>
            </div>
            <div id="submission-files">
              <label><b>Submitted Files:</b></label>
              <span>(Click to load)</span>
              <div id="submitted-file-list">
                <% for (let i = 0; i < selected_student.submission.file_list.length; i++) { %>
                  <div class="submission-file">
                    <div class="container">
                      <form action="http://localhost:3000/change_file" method="post" id="file_form" class="file_form_test">
                        <button class="submission_button" type="submit" name=<%=selected_student.submission.file_list[i].id + '-' +selected_student.studentID%>><%= selected_student.submission.file_list[i].name %></button>
                        <label>
                          <input class="secret2" name='student_id' value=<%=selected_student.studentID%>>
                        </label>
                        <label>
                          <input class="secret2" name='file_id' value=<%=selected_student.submission.file_list[i].id%>>
                        </label>
                        <% for (let i = 0; i < focus_file.coupling_scores.length + focus_file.cohesion_scores.length +focus_file.complexity_scores.length; i++) { %>
                          <label>
                            <input class="<%='s'+(i+1)%> secret2 file_threshold" name='fuck' value=<%=threshold_list[i]%>>
                          </label>
                        <% } %>

                        <% for (let i = 0; i < focus_file.naming_scores.length + focus_file.general_scores.length; i++) { %>
                          <label>
                            <input class="<%='s'+(i+1+focus_file.coupling_scores.length + focus_file.cohesion_scores.length +focus_file.complexity_scores.length)%> secret2 file_threshold" name='fuck' value=<%=threshold_list[i+focus_file.coupling_scores.length + focus_file.cohesion_scores.length +focus_file.complexity_scores.length]%>>
                          </label>
                        <% } %>
                      </form>
                      <a class="submission-file-download icon-download float-right" href="/courses/2173881/assignments/13793262/submissions/6962095?download=132327340" download="">
                    <span class="screenreader-only">
                      <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-download" viewBox="0 0 16 16">
                        <path d="M.5 9.9a.5.5 0 0 1 .5.5v2.5a1 1 0 0 0 1 1h12a1 1 0 0 0 1-1v-2.5a.5.5 0 0 1 1 0v2.5a2 2 0 0 1-2 2H2a2 2 0 0 1-2-2v-2.5a.5.5 0 0 1 .5-.5z"/>
                        <path d="M7.646 11.854a.5.5 0 0 0 .708 0l3-3a.5.5 0 0 0-.708-.708L8.5 10.293V1.5a.5.5 0 0 0-1 0v8.793L5.354 8.146a.5.5 0 1 0-.708.708l3 3z"/>
                      </svg>
                    </span>
                      </a>
                    </div>
                  </div>
                <% } %>
              </div>
            </div>
          </div>
        </div>
        <div>
          <table>
            <tr>
              <th colspan="2">Class Summary</th>
            </tr>
            <tr>
              <td><button class="open-button ui-button" onclick="open_qma_form()">QMA Summary</button></td>
              <td><button class="open-button ui-button" onclick="open_cma_form()">CMA Summary</button></td>
              </tr>
          </table>
        </div>
      </div>
    </div>
  </body>
</html>
